// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface DNSClaimChecker$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "DNSClaimChecker",
  "sourceName": "contracts/dnsregistrar/DNSClaimChecker.sol",
  "abi": [],
  "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220661ec839e6a3e363676d6e62cfd4c676eda6dc35fbae87f07f4ffaa573df9c1864736f6c63430008110033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220661ec839e6a3e363676d6e62cfd4c676eda6dc35fbae87f07f4ffaa573df9c1864736f6c63430008110033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "DNSClaimChecker",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<DNSClaimChecker$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/dnsregistrar/DNSClaimChecker.sol:DNSClaimChecker",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<DNSClaimChecker$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "DNSClaimChecker",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<DNSClaimChecker$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/dnsregistrar/DNSClaimChecker.sol:DNSClaimChecker",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<DNSClaimChecker$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "DNSClaimChecker",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<DNSClaimChecker$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/dnsregistrar/DNSClaimChecker.sol:DNSClaimChecker",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<DNSClaimChecker$Type["abi"]>>;
}
